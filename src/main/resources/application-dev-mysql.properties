server.port=8081

#Conexión a la base de datos
#Database MYSQL
#"biblioteca" es el nombre de la base de datos
spring.datasource.url=jdbc:mysql://localhost:3306/biblioteca?useSSL=false&serverTimeZone=MEX

#Usuario puesto en mysql workbench
spring.datasource.username=root

#Contrtaseña puesta en mysql workbench
spring.datasource.password=1234

#Driver de conexión
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect


#Create : cuando el servidor se inicie, todas las entidades se crearán nuevamente

#Update : cuando el servidor inicie, el contenedor encontrará qué entidades se han actualizado y cuáles se han creado
# recientemente. Lo mismo sucederá dentro de la base de datos y la tabla anterior se actualizará según la entidad y se creará la nueva tabla.

#Create-drop: cuando el servidor se inicie, todas las entidades se crearán automáticamente y cuando el servidor se
# detenga, todas las entidades se eliminarán automáticamente de la base de datos.

#none: significa que el ddl de la base de datos no afectará la aplicación back-end. Nota: el entorno de producción
# siempre está configurado con ningún valor

#Con esto si la base de datos o tablas no existen las crea y las actualiza
spring.jpa.hibernate.ddl-auto=update


#Sirve para cada que usemos JPA el sistema muestre la consulta sql
spring.jpa.show-sql=true

#Para que el formato venga en sql la consulta de la configuracion anterior
spring.jpa.properties.hibernate.format_sql=true